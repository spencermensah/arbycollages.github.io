{"version":3,"sources":["template.png","ResponsiveDrawer.js","App.js","reportWebVitals.js","index.js"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","menuButton","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","ResponsiveDrawer","props","window","classes","useTheme","React","useState","mobileOpen","setMobileOpen","handleChange","event","target","dataset","param","onChange","List","map","text","index","ListItem","button","data-param","onClick","class","src","container","undefined","document","body","className","CssBaseline","aria-label","Hidden","smUp","implementation","Drawer","variant","anchor","direction","open","onClose","paper","ModalProps","keepMounted","xsDown","App","value","setValue","template","newValue","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oNAAe,G,MAAA,IAA0B,sC,0JCmBnCA,EAAc,IAEdC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,QAEXC,OAAO,eACJH,EAAMI,YAAYC,GAAG,MAAQ,CAC5BC,MAAOT,EACPU,WAAY,IAGhBC,OAAO,eACJR,EAAMI,YAAYC,GAAG,MAAQ,CAC5BC,MAAM,eAAD,OAAiBT,EAAjB,OACLY,WAAYZ,IAGhBa,WAAW,aACTC,YAAaX,EAAMY,QAAQ,IAC1BZ,EAAMI,YAAYC,GAAG,MAAQ,CAC5BH,QAAS,SAIbW,QAASb,EAAMc,OAAOD,QACtBE,YAAa,CACXT,MAAOT,GAETmB,QAAS,CACPC,SAAU,EACVC,QAASlB,EAAMY,QAAQ,QA4EZO,MAxEf,SAA0BC,GAAQ,IACxBC,EAAWD,EAAXC,OACFC,EAAUxB,IACVE,EAAQuB,cAHiB,EAIKC,IAAMC,UAAS,GAJpB,mBAIxBC,EAJwB,KAIZC,EAJY,OAKOH,IAAMC,SAAS,KALtB,mBAW/B,SAASG,EAAaC,GACEA,EAAMC,OAAOC,QAAvBC,MACRZ,EAAMa,SAASJ,EAAMC,OAAOC,SAbH,UAgB/B,IAAM5B,EACJ,8BACE,cAAC+B,EAAA,EAAD,UACG,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKC,KAAI,SAACC,EAAMC,GAAP,OAClC,cAACC,EAAA,EAAD,CAAUC,QAAM,EAAhB,SACE,qBAAKC,aAAYJ,EAAOK,QAASb,EAAcc,MAAM,cAAcC,IAAK,6BAA+BP,EAAO,kBAOlHQ,OAAuBC,IAAXxB,EAAuB,kBAAMA,IAASyB,SAASC,WAAOF,EAExE,OACE,sBAAKG,UAAW1B,EAAQrB,KAAxB,UACE,cAACgD,EAAA,EAAD,IACA,sBAAKD,UAAW1B,EAAQnB,OAAQ+C,aAAW,kBAA3C,UAEE,cAACC,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,MAA5B,SACE,cAACC,EAAA,EAAD,CACEV,UAAWA,EACXW,QAAQ,YACRC,OAA4B,QAApBxD,EAAMyD,UAAsB,QAAU,OAC9CC,KAAMhC,EACNiC,QAlCiB,WACzBhC,GAAeD,IAkCPJ,QAAS,CACPsC,MAAOtC,EAAQP,aAEjB8C,WAAY,CACVC,aAAa,GAVjB,SAaG3D,MAGL,cAACgD,EAAA,EAAD,CAAQY,QAAM,EAACV,eAAe,MAA9B,SACE,cAACC,EAAA,EAAD,CACEhC,QAAS,CACPsC,MAAOtC,EAAQP,aAEjBwC,QAAQ,YACRG,MAAI,EALN,SAOGvD,aCxEE6D,MAlCf,WAAgB,IAAD,EAEaxC,IAAMC,SAAS,KAF5B,mBAENwC,EAFM,KAECC,EAFD,KAUb,OACE,8BACI,sBAAKlB,UAAU,MAAf,UAEE,+CAEA,qBAAKN,MAAM,MAAMC,IAAKwB,IAEtB,cAAC,IAAD,UACE,8BACE,qBAAKzB,MAAM,UAAUC,IAAK,6BAA+BsB,EAAQ,aAIrE,cAAC,EAAD,CACEA,MAAOA,EACPhC,SAtBR,SAAsBmC,GACpBF,EAASE,EAASpC,OAClBqC,QAAQC,IAAIL,GACZI,QAAQC,IAAI,6BAA+BL,EAAQ,iBCH1CM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASqC,eAAe,SAM1BZ,M","file":"static/js/main.49601bb9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/template.dc515849.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst drawerWidth = 100;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth,\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nfunction ResponsiveDrawer(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [selectedImg, setSelectedImg] = React.useState(\"1\");\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  function handleChange(event){\n        const { param } = event.target.dataset;\n        props.onChange(event.target.dataset);\n  }\n\n  const drawer = (\n    <div>\n      <List>\n        {['1', '2', '3', '4', '5', '6'].map((text, index) => (\n          <ListItem button>\n            <img data-param={text}  onClick={handleChange} class=\"graphicList\" src={\"http://localhost:3000/img/\" + text + \".png\"}></img>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"permanent\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n    </div>\n  );\n}\n\nResponsiveDrawer.propTypes = {\n  window: PropTypes.func,\n};\n\nexport default ResponsiveDrawer;\n","import './App.css';\nimport React from 'react';\nimport template from './template.png'\nimport Draggable from 'react-draggable';\nimport { Button } from '@material-ui/core';\nimport AlertDialogSlide from './AlertDialogSlide';\nimport ResponsiveDrawer from './ResponsiveDrawer';\n\nfunction App() {\n\n  const [value, setValue] = React.useState(\"1\");\n\n    function handleChange(newValue) {\n      setValue(newValue.param);\n      console.log(value);\n      console.log(\"http://localhost:3000/img/\" + value + \".png\");\n    }\n\n  return (\n    <div>\n        <div className=\"App\">\n\n          <h1>arby_collages</h1>\n\n          <img class=\"tmp\" src={template}></img>\n\n          <Draggable>\n            <div>\n              <img class=\"graphic\" src={\"http://localhost:3000/img/\" + value + \".png\"}></img>\n            </div>\n          </Draggable>\n\n          <ResponsiveDrawer\n            value={value}\n            onChange={handleChange}\n            />\n\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}